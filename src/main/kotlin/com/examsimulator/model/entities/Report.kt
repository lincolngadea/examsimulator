package com.examsimulator.model.entities

import com.examsimulator.model.enums.ReportType
import jakarta.persistence.*
import jakarta.validation.constraints.NotBlank
import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Size
import org.hibernate.annotations.CreationTimestamp
import org.hibernate.annotations.UpdateTimestamp
import java.time.LocalDateTime

@Entity
@Table(name = "report", indexes = [Index(name = "idx_report_type", columnList = "type")])
data class Report(
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)  // Auto-generated primary key.
    val id: Long = 0,

    @Column(nullable = false, length = 255)
    @field:NotBlank(message = "Report title is required")
    @field:Size(max = 255, message = "Report title must be at most 255 characters")
    val title: String,

    @Enumerated(EnumType.STRING)
    @Column(nullable = false, length = 50)
    @field:NotNull(message = "Report type is required")
    @Size(max = 50, message = "Report type must be at most 255 characters")
    val type: ReportType,

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "generetad_by_id", nullable = false)
    @field:NotNull(message = "Generated by user is required")
    val generatedBy: User,

    @CreationTimestamp
    @Column(updatable = false, nullable = false)
    val generatedAt: LocalDateTime,

    @UpdateTimestamp
    @Column
    val updatedAt: LocalDateTime? = null,

    @Lob
    @Column(nullable = false)
    @field:NotBlank(message = "Report content is required")
    val content: String
)
